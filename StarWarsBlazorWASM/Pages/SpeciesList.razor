@inject HttpClient _httpClient
@attribute [StreamRendering]

<div class="col-md-2">
    <table class="table table-hover table-striped table-sm">
        <thead class="thead-dark">
            <tr>
                <th>@Heading</th>
            </tr>
        </thead>
        <tbody>
            @if (specieListLoaded == false)
            {
            <tr>
                <td>
                    <div class="d-flex align-items-center">
                        <strong>Loading...</strong>
                        <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
                    </div>
                </td>
            </tr>
            }
            else
            {
                @for (int i = 0; i < Species.Count; i++)
                {
                    <tr>
                        <td><a href="@($"/speciesdetails/{Species[i].Url.Substring(30)}")">@Species[i].Name</a></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public string Heading { get; set; }

    [Parameter]
    public List<string> species { get; set; }

    [Parameter]
    public string ErrorString { get; set; }


    List<Specie> Species = new List<Specie>();

    private bool specieListLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        foreach (var specie in species)
        {
            string urlPpath = $"species/{specie.Substring(29)}";

            try
            {
                var s = await _httpClient.GetFromJsonAsync<Specie>(urlPpath);

                Species.Add(s);

            }
            catch (Exception ex)
            {
                ErrorString = $"There was an error getting specie details: { ex.Message } { urlPpath }";
            }
        }

        specieListLoaded = true;
    }
}
